class Solution:
    def minCost(self, n: int, cuts: List[int]) -> int:

        dp = {}

        def dfs(l,r):
            if (r-l) == 1:
                return 0
            
            if (l,r) in dp:
                return dp[(l,r)]
            
            re = float("inf")
            for i in cuts:
                if l<i<r:
                    t = (r-l) + dfs(l,i) + dfs(i,r)
                    re = min(re,t)
            dp[(l,r)] = re=0 if re==float("inf") else re
            return re
        return dfs(0,n)
