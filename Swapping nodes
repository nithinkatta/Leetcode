/**

 * Definition for singly-linked list.

 * struct ListNode {

 *     int val;

 *     ListNode *next;

 *     ListNode() : val(0), next(nullptr) {}

 *     ListNode(int x) : val(x), next(nullptr) {}

 *     ListNode(int x, ListNode *next) : val(x), next(next) {}

 * };

 */

class Solution {

public:

    ListNode* swapPairs(ListNode* head) {

        if(!head || !head->next) return head; //If there are less than 2 nodes in the given nodes, then no need to do anything just return the list as it is.

		        ListNode* d = new ListNode();

        

        ListNode* p=d;

        ListNode* c=head;

        

        while(c && c->next){

            p->next = c->next;

            c->next = p->next->next;

            p->next->next = c;

            

            p = c;

            c= c->next;

        }

        

        return d->next;

    }

};
